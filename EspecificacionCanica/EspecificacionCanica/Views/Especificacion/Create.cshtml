@model EspecificacionCanica.Models.Canica

@{
    ViewBag.Title = "Create";
}

<h2></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="jumbotron" style="background-color:#DBB95C!important;font-size:10pt!important">
      <div class="row">
        <div class="col-md-2">
          <img src="~/Resources/logo2Artboard 1Glasfirma.png" style="width:80%!important;height:80%!important " />
        </div>
        <div class=" col-md-9">
          <div class="row" style="color:white;font-weight:bold; text-align:center">
            <div class="col-md-9">
              <h2>ESPECIFICACIÓN DE PRODUCTO</h2>
            </div>
            <div class="col-md-3">
              <h2>4-CM-05</h2>
            </div>
          </div>
          @*<hr />*@
          <div class="row especificacion" style="text-align:center!important;">
            <div class="col-md-2">
              @Html.LabelFor(model => model.Cliente, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-3">
              @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
              @Html.LabelFor(model => model.Medida, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
              @Html.LabelFor(model => model.Calibracion, htmlAttributes: new { @class = "control-label" })

            </div>
            <div class="col-md-3">
              @Html.LabelFor(model => model.CodigoSAP, htmlAttributes: new { @class = "control-label" })
            </div>
          </div>
          @*<div class="row">
            <div class="col-md-2">
              @Html.EditorFor(model => model.Cliente, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
              @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">

            </div>
            <div class="col-md-2">


            </div>
            <div class="col-md-3">

            </div>
          </div>*@

          @*<hr />*@
          <div class="row especificacion" style="text-align:center!important;">
            <div class="col-md-2" style="visibility:hidden!important  ">

            </div>
            <div class="col-md-3">
              @Html.LabelFor(model => model.NombreCliente, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
              @Html.LabelFor(model => model.Empaque, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-2">
              @Html.LabelFor(model => model.ColorMalla, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-3">
              @Html.LabelFor(model => model.NumArticulo, htmlAttributes: new { @class = "control-label" })
            </div>
          </div>
        </div>
      </div>

      @*<h1 class="display-4">Hello, world!</h1>
        <p class="lead">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>
        <hr class="my-4">
        <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>
        <a class="btn btn-primary btn-lg" href="#" role="button">Learn more</a>*@
    </div>


    @*<div class="form-horizontal">
        <h4>Canica</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="accordion" id="accordionExample">
          <div class="card">
            <div class="card-header" id="headingOne">
              <h5 class="mb-0">
                <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                  Collapsible Group Item #1
                </button>
              </h5>
            </div>

            <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
              <div class="card-body">
                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
              </div>
            </div>
          </div>
          <div class="card">
            <div class="card-header" id="headingTwo">
              <h5 class="mb-0">
                <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                  Collapsible Group Item #2
                </button>
              </h5>
            </div>
            <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample">
              <div class="card-body">
                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
              </div>
            </div>
          </div>
          <div class="card">
            <div class="card-header" id="headingThree">
              <h5 class="mb-0">
                <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                  Collapsible Group Item #3
                </button>
              </h5>
            </div>
            <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordionExample">
              <div class="card-body">
                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
              </div>
            </div>
          </div>
        </div>



        <div class="form-group">
          @Html.LabelFor(model => model.Cliente, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">

          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">

          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.Medida, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Medida, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Medida, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.Calibracion, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Calibracion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Calibracion, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.CodigoSAP, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.CodigoSAP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CodigoSAP, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.NombreCliente, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.NombreCliente, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NombreCliente, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.Empaque, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Empaque, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Empaque, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.ColorMalla, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.ColorMalla, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ColorMalla, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.NumArticulo, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.NumArticulo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumArticulo, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
          </div>
        </div>
      </div>*@
}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
